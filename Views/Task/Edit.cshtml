@model TodoTracker.ViewModels.TaskViewModel
@{
    ViewBag.Title = "Edit Task";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <div class="card shadow">
        <div class="card-header bg-primary text-white">
            <h4 class="mb-0">✏️ Edit Task</h4>
        </div>
        <div class="card-body">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.Id)

                <div class="mb-3">
                    @Html.LabelFor(m => m.TaskTitle, new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.TaskTitle, new { @class = "form-control", placeholder = "Enter task title" })
                    @Html.ValidationMessageFor(m => m.TaskTitle, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(m => m.TaskDescription, new { @class = "form-label" })
                    @Html.TextAreaFor(m => m.TaskDescription, new { @class = "form-control", placeholder = "Enter task description", rows = 3 })
                    @Html.ValidationMessageFor(m => m.TaskDescription, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3">
                    @Html.LabelFor(m => m.TaskAssignDate, new { @class = "form-label" })
                    @Html.TextBoxFor(m => m.TaskAssignDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                    @Html.ValidationMessageFor(m => m.TaskAssignDate, "", new { @class = "text-danger" })
                </div>

                <div class="mb-3 form-check">
                    @Html.CheckBoxFor(m => m.IsCompleted, new { @class = "form-check-input" })
                    @Html.LabelFor(m => m.IsCompleted, new { @class = "form-check-label" })
                </div>

                <div class="mb-3">
                    <label class="form-label">Categories</label>
                    @foreach (var category in Model.AvailableCategories!)
                    {
                        var isChecked = Model.SelectedCategoryIds!.Contains(category.Id);
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" name="SelectedCategoryIds" value="@category.Id" @(isChecked ? "checked" : "") />
                            <label class="form-check-label">@category.CategoryName</label>
                        </div>
                    }
                </div>

                <button type="submit" class="btn btn-success">💾 Update Task</button>
                <a asp-action="Index" class="btn btn-outline-secondary ms-2">Cancel</a>
            }
        </div>
    </div>
</div>
